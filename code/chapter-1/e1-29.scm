(define (sum term a next b)
  (if (> a b)
    0
    (+ (term a)
       (sum term (next a) next b))))

(define (sinpson f a b n)
  (define h (/ (- b a) n))
  (define (y k) (f (+ a (* k h))))
  (define (factor k)
    (cond ((or (= k 0) (= k n)) 1)
      ((odd? k) 4)
      (else 2)))
  (define (term k)
    (* (factor k)
       (y k)))
  (define (next x)
    (+ x 1))
  (* (/ h 3)
     (sum term a next n)))

(define (cube x)
  (* x x x))

(sinpson cube 0.0 1.0 100)
(sinpson cube 0.0 1.0 1000)